##Author: Cole Leighton
##Date: 07/19/2024
##Instructions: 



##Authentication Challenge gateway script
def onAuthChallengeCompleted(session, payload, result):
	tagPath = payload['tagPath']
	comment = payload['comment']
	user1 = payload['user1']
	host = payload['host']

	if result.isSuccess():
		success = True
		context = result.getAsSuccess().getContext()
		user = context.user
		user2 = context.user.userName
		roles = user.roles
		
		if 'Administrator' in roles:
			userString = user1 + ' & ' + user2
			system.tag.writeBlocking([tagPath], [1])
			system.util.audit(
				action = 'Hand Mode Request - Administrator',
				actionTarget = tagPath,
				auditProfile = 'WAH_CND_AUDIT',
				actionValue = 'Reason: ' +  comment,
				actor = userString,
				originatingContext = 4,
				actorHost = host
				)
		elif 'Maintenance' in roles:
			userString = user1 + ' & ' + user2
			system.tag.writeBlocking([tagPath], [1])
			system.util.audit(
				action = 'Hand Mode Request - Maintenance',
				actionTarget = tagPath,
				auditProfile = 'WAH_CND_AUDIT',
				actionValue = 'Reason: ' +  comment,
				actor = userString,
				originatingContext = 4,
				actorHost = host
				)
		elif 'Supervisor' in roles:
			userString = user1 + ' & ' + user2
			system.tag.writeBlocking([tagPath], [1])
			system.util.audit(
				action = 'Hand Mode Request - Supervisor',
				actionTarget = tagPath,
				auditProfile = 'WAH_CND_AUDIT',
				actionValue = 'Reason: ' +  comment,
				actor = userString,
				originatingContext = 4,
				actorHost = host
				)				
		else:
			userString = user1 + ' & ' + user2
			system.util.audit(
				action = 'Hand Mode Request Failed',
				actionTarget = tagPath,
				auditProfile = 'WAH_CND_AUDIT',
				actionValue = 'Reason: User 2 does not have proper permissions',
				actor = userString,
				originatingContext = 4,
				actorHost = host
				)



## Button that called this function
def runAction(self, event):
	tagPath = self.view.params.tagPath
	comment = self.parent.parent.getChild("TextArea").props.text
	user1 = self.session.props.auth.user.userName
	host = str(self.session.props.host)
	system.perspective.authenticationChallenge(
		idp = 'WAH_CND_IDP',
		forceAuth = True,
		timeout = 1,
		framing = 'embedded',
		payload = {
			'tagPath':tagPath,
			'comment':comment,
			'user1': user1,
			'host': host
			}
		)
